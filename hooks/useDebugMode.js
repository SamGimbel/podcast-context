import { useState, useCallback } from 'react';

/**
 * Hook for managing debug mode state
 * @param {Function} logger - Logging function
 * @returns {Object} Debug mode state and functions
 */
export default function useDebugMode(logger) {
  const [debugMode, setDebugMode] = useState(true); // Default to true to reduce API usage
  
  const toggleDebugMode = useCallback((enabled) => {
    setDebugMode(enabled);
    logger(`Debug mode ${enabled ? 'enabled' : 'disabled'}`);
  }, [logger]);
  
  // Generate mock data for debugging
  const generateMockData = useCallback((segmentIndex) => {
    const timestamp = new Date().toISOString();
    return {
      transcript: `Debug transcript at ${timestamp.substring(11, 19)}. This is segment ${segmentIndex}.`,
      context: `This is simulated context for debugging purposes. No API call was made to save costs. The content simulates what would be generated by an AI model analyzing the audio at time index ${segmentIndex * 15} seconds.`,
      wikipedia: segmentIndex % 3 === 0 ? { // Only add Wikipedia info to every 3rd segment
        title: "Podcast",
        url: "https://en.wikipedia.org/wiki/Podcast",
        snippet: "A podcast is an episodic series of digital audio files that a user can download or stream to listen to. It is often available for subscription so that new episodes are automatically downloaded via web syndication to the user's device."
      } : null,
      segment: `15-second segment #${segmentIndex} (Debug Mode)`,
      timestamp: Date.now(),
      mainTopic: `Topic ${segmentIndex}`,
      segmentIndex
    };
  }, []);
  
  return {
    debugMode,
    toggleDebugMode,
    generateMockData
  };
}